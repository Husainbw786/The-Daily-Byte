
/**
  * This question is asked by Facebook. Given a string and the ability to delete at most one character, return whether or not it can form a palindrome.
  * Note: a palindrome is a sequence of characters that reads the same forwards and backwards.
  *
  * Ex: Given the following strings...
  *
  * "abcba", return true
  * "foobof", return true (remove the first 'o', the second 'o', or 'b')
  * "abccab", return false
  */

// Question: https://leetcode.com/problems/valid-palindrome-ii/
//  Solutions

class Solution {
public:
    bool validPalindrome(string s) {
        int len = s.length();
        int left = 0;
        int right = len -1;
        
        while(left < right)
        {
            if(s[left] == s[right])
            {
                left++;
                right--;
                continue;
            }
            int right_r = right;
            int left_l = left+1;
            
            while(left_l < right_r)
            {
                if(s[left_l] == s[right_r])
                { 
                    left_l++;
                   right_r--;
                   continue;   
                }  
             break;   
            }
            if(left_l >= right_r)
            {
                return true;
            }
            
            right_r = right-1;
            left_l = left;
            
            while(left_l < right_r)
            {
                if(s[left_l] == s[right_r])
                {
                    left_l++;
                    right_r--;
                    continue;
                }
                break;
            }
            if(left_l >= right_r)
            {   
                return true;
            }
            return false;
        }
               return true;
    }
};






